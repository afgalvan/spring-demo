name: Java CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: springdemo
          POSTGRES_PASSWORD: root
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Create application.properties
        run: |
          touch src/main/resources/application.properties
          echo "spring.jpa.database=POSTGRESQL
                spring.datasource.platform=postgres
                spring.jpa.show-sql=true
                spring.jpa.generate-ddl=true
                spring.datasource.url=jdbc:postgresql://localhost:5432/springdemo
                spring.datasource.username=postgres
                spring.datasource.password=root
                server.port=8081
                spring.jpa.open-in-view=true
                spring.jpa.hibernate.ddl-auto=update" > src/main/resources/application.properties

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: ./gradlew clean build --stacktrace
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
