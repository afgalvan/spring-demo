name: Java CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      DB_NAME: tasks
      DB_USER: root
      DB_PASSWORD: root
    services:
      mysql:
        image: mysql:8.0

    steps:
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_NAME }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: create application.properties
        run: |
          touch application.properties
          echo "spring.datasource.url=jdbc:mysql://localhost:3306/springdemo
                spring.datasource.username=root
                spring.datasource.password=root
                server.port=8081
                spring.jpa.open-in-view=true
                spring.jpa.hibernate.ddl-auto=update" > application.properties
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build with Gradle
        run: ./gradlew clean build --stacktrace

  test:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: ./gradlew test
      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
